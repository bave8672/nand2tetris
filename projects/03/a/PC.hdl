// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Not(in=reset, out=notReset);
    And(a=load, b=notReset, out=loadout);
    Not(in=loadout, out=notLoad);
    And(a=inc, b=notReset, out=incout0);
    And(a=incout0, b=notLoad, out=incout);
    Not(in=incout, out=notInc);
    And(a=notLoad, b=notInc, out=notLoadAndNotInc);
    And(a=notReset, b=notLoadAndNotInc, out=none);
    Or(a=reset, b=loadout, out=loadOrReset);
    Or(a=incout, b=loadout, out=loadOrInc);
    Or(a=reset, b=incout, out=resetOrInc);
    Or(a=resetOrInc, b=none, out=resetOrIncOrNone);
    Or(a=incout, b=none, out=incOrNone);
    ALU(x=rout, y=in, zx=loadOrReset, nx=loadOrInc, zy=resetOrIncOrNone, ny=incOrNone, f=resetOrInc, no=incout, out=aluOut);

    Register(in=aluOut, load=true, out=rout);
    Wire16(in=rout, out=out);
}
